version: '3.8'

services:
  # Main application service
  sentiment-analyzer:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "5000:8080"
    environment:
      - MODEL_PATH=/app/models/sentiment_model.joblib
      - LOG_LEVEL=info
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - ./models:/app/models:ro
      - ./logs:/app/logs
      - ./data:/app/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sentiment-net

  # Development service with hot reloading
  sentiment-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5000"
    environment:
      - MODEL_PATH=/app/models/sentiment_model.joblib
      - LOG_LEVEL=debug
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
      - /app/.venv
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
    command: ["python", "-m", "src.webapp", "--host", "0.0.0.0", "--port", "5000", "--debug"]
    networks:
      - sentiment-net
    profiles:
      - dev

  # Redis for caching (optional)
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sentiment-net
    profiles:
      - cache

  # PostgreSQL for data storage (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sentiment_db
      POSTGRES_USER: sentiment_user
      POSTGRES_PASSWORD: sentiment_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentiment_user -d sentiment_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sentiment-net
    profiles:
      - database

volumes:
  redis_data:
  postgres_data:

networks:
  sentiment-net:
    driver: bridge